#!/bin/bash

script_name="$(basename ${BASH_SOURCE[0]})"
script_reldir="$(dirname ${BASH_SOURCE[0]})"
script_absdir="$(cd $script_reldir > /dev/null && pwd)"
. "$script_absdir"/../misc.sh

set -e
trap trap_error ERR
trap trap_exit EXIT
trap trap_user_exit INT

pushd "$script_absdir" >/dev/null

action="$1"
arch="${ARCH:-$(uname -m)}"
container=""
platform=""
prefix="${PREFIX:-gh}"
tag=""
version="${VERSION:-3.11.23}"
volume="${prefix}-rmq"
env_port1=5672
env_port2=15672

# RMQ images can be found at https://hub.docker.com/_/rabbitmq
case "$arch" in
arm64)
	platform="linux/arm64/v8"
	container="${prefix}-rmq-arm64-$version"
	tag="rabbitmq:$version-management"
	;;
x86_64)
	platform="linux/x86_64"
	container="${prefix}-rmq-x86_64-$version"
	tag="rabbitmq:$version-management"
	;;
*)
	log_error ">>> Unsupported architecture: $arch."
	exit 1
esac

case "$action" in
reset) container_reset "$container" "$volume" ;;
rm) container_rm "$container" "$volume" "$tag" ;;
stop) container_stop "$container" ;;
build) docker volume create "$volume" ;;
start)
	container_id="$(docker ps -aq --filter name="$container")"
	if [ -n "$container_id" ]; then
		docker start "$container"

	else docker run -d --init \
		-p "$env_port1:$env_port1" \
		-p "$env_port2:$env_port2" \
		--platform $platform \
		--mount source="$volume",target=/usr/local/rabbitmq/var/lib/rabbitmq/mnesia \
		--mount type=tmpfs,destination=/usr/local/rabbitmq/var/log/rabbitmq \
		--name "$container" \
		"$tag"
	fi

	docker logs --follow --tail 15 "$container" &
	wait
	;;
*)
	log_warning ">>> Unknown or missing action."
	log_warning "$ ./do build|start|stop|reset|rm"
esac