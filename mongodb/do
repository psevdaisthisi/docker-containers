#!/bin/bash

script_name="$(basename ${BASH_SOURCE[0]})"
script_reldir="$(dirname ${BASH_SOURCE[0]})"
script_absdir="$(cd $script_reldir > /dev/null && pwd)"
. "$script_absdir"/../misc.sh

set -e
trap trap_error ERR
trap trap_exit EXIT
trap trap_user_exit INT

pushd "$script_absdir" >/dev/null

# MongoDB releases are available at
# https://www.mongodb.com/try/download/community
action="$1"
arch="${ARCH:-$(uname -m)}"
container=""
platform=""
prefix="${PREFIX:-gh}"
tag=""
version="${VERSION:-4.4.22}"
volume="${prefix}-mongo"
arg_pkg="https://fastdl.mongodb.org/linux"
env_port=27017
env_replSet="rs0"

case "$arch" in
arm64)
	arg_pkg="${arg_pkg}/mongodb-linux-aarch64-ubuntu1804-${version}.tgz"
	platform="linux/arm64/v8"
	container="${prefix}-mongo-arm64-$version"
	tag="$prefix-mongo-arm64:$version"
	;;
x86_64)
	arg_pkg="${arg_pkg}/mongodb-linux-x86_64-debian10-${version}.tgz"
	platform="linux/x86_64"
	container="${prefix}-mongo-x86_64-$version"
	tag="${prefix}-mongo-x86:$version"
	;;
*)
	log_error ">>> Unsupported architecture: $arch."
	exit 1
	;;
esac

case "$1" in
reset)
	container_reset "$container" "$volume"
	;;
rm)
	container_rm "$container" "$volume" "$tag"
	;;
stop)
	container_stop "$container"
	;;
build)
	docker build \
		--build-arg PKG="$arg_pkg" \
		--platform $platform \
		--tag $tag .
	docker volume create "$volume"
	;;
start)
	container_id="$(docker ps -aq --filter name="$container")"
	if [ -n "$container_id" ]; then
		docker start "$container"

	else docker run -d --init \
		-e port="$env_port" \
		-e replSet="$env_replSet" \
		-p "$env_port:$env_port" \
		--platform $platform \
		--mount source="$volume",target=/data/db \
		--name "$container" \
		"$tag"
	fi

	docker logs --follow --tail 15 "$container" &
	wait
	;;
*)
	log_warning ">>> Unknown or missing action."
	log_warning "$ ./do build|run|stop|reset|rm"
	;;
esac