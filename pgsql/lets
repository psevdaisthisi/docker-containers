#!/bin/bash

script_name="$(basename ${BASH_SOURCE[0]})"
script_reldir="$(dirname ${BASH_SOURCE[0]})"
script_absdir="$(cd $script_reldir > /dev/null && pwd)"
. "$script_absdir"/../misc.sh

set -e
trap trap_error ERR
trap trap_exit EXIT
trap trap_user_exit INT

pushd "$script_absdir" >/dev/null

# PostgreSQL images can be found at
# https://hub.docker.com/_/postgres
action="$1"
arch="${ARCH:-$(uname -m)}"
container=""
platform=""
prefix="${PREFIX:-gh}"
tag=""
version="${VERSION:-15.5-alpine3.18}"
volume="${prefix}-pgsql"
env_port=5432

case "$arch" in
arm64)
	platform="linux/arm64/v8"
	container="${prefix}-pgsql-arm64-$version"
	tag="postgres:$version"
	;;
x86_64)
	platform="linux/x86_64"
	container="${prefix}-pgsql-x86_64-$version"
	tag="postgres:$version"
	;;
*)
	log_error ">>> Unsupported architecture: $arch."
	exit 1
	;;
esac

case "$action" in
reset) container_reset "$container" "$volume" ;;
rm) container_rm "$container" "$volume" "$tag" ;;
stop) container_stop "$container" ;;
build) docker volume create "$volume" ;;
start)
	container_id="$(docker ps -aq --filter name="$container")"
	if [ -n "$container_id" ]; then
		docker start "$container"

	else docker run -d --init \
		-p "$env_port:$env_port" \
		-e POSTGRES_PASSWORD="pgsql!42" \
		--platform $platform \
		--mount source="$volume",target=/var/lib/postgresql/data \
		--name "$container" \
		"$tag"
	fi

	docker logs --follow --tail 15 "$container" &
	wait
	;;
*)
	log_warning ">>> Unknown or missing action."
	log_warning "\$ ./lets build|start|stop|reset|rm"
	;;
esac